name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Run unit tests
        run: make test

  integration-test-suite:
    name: Integration Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Build tavern CLI
        run: make build
      
      - name: Build test server
        run: |
          cd tests/integration/cmd/server
          go build -o ../../server .
      
      - name: Start test server
        run: |
          cd tests/integration
          ./server &
          sleep 2
      
      - name: Run integration tests
        run: |
          cd tests/integration
          make test
        env:
          TEST_HOST: http://localhost:5000
          SECOND_URL_PART: again
      
      - name: Stop test server
        if: always()
        run: pkill -f "integration/server" || true

  example-docker-tests:
    name: Example Tests (Docker)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [advanced, cookies]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Build tavern binary
        run: make build
      
      - name: Run Docker example tests - ${{ matrix.example }}
        run: |
          cd examples/${{ matrix.example }}
          make docker-build
          make docker-up
          make docker-test
          make docker-down

  example-cli-tests:
    name: Example Tests (CLI)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - name: simple
            file: test_server.tavern.yaml
          - name: remember
            file: test_server.tavern.yaml
          - name: regex
            file: test_server.tavern.yaml
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Build tavern CLI
        run: make build
      
      - name: Start test server - ${{ matrix.example.name }}
        run: |
          cd examples/${{ matrix.example.name }}
          go run server.go &
          sleep 2
      
      - name: Run CLI example test - ${{ matrix.example.name }}
        run: |
          ./bin/tavern examples/${{ matrix.example.name }}/${{ matrix.example.file }}
      
      - name: Stop test server
        if: always()
        run: pkill -f "go run server.go" || true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          make lint

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - run: make build
