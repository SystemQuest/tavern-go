---
# Example: Using clear_session_cookies meta directive
# Aligned with tavern-py commit 1dcffc6
#
# This example demonstrates how to simulate browser close behavior by clearing session cookies
# while preserving persistent cookies (those with Expires or Max-Age attributes).
#
# Use case: Testing scenarios where users close browser but return later
# - Session cookies (without Expires) are cleared
# - Persistent cookies (with Expires/Max-Age) are preserved

test_name: Test clear session cookies

stages:
  # Stage 1: Login and receive both session and persistent cookies
  - name: Login to application
    request:
      url: http://localhost:8080/login
      method: POST
      json:
        username: testuser
        password: testpass
    response:
      status_code: 200
      # Expect to receive:
      # - session_id (session cookie, no Expires)
      # - remember_me (persistent cookie, with Expires)
      cookies:
        - session_id
        - remember_me

  # Stage 2: Access protected resource with both cookies
  - name: Access user dashboard
    request:
      url: http://localhost:8080/dashboard
      method: GET
    response:
      status_code: 200
      json:
        authenticated: true
        has_remember_me: true

  # Stage 3: Simulate browser close by clearing session cookies
  - name: Simulate browser restart
    request:
      url: http://localhost:8080/dashboard
      method: GET
      # This meta directive clears session cookies but preserves persistent cookies
      meta:
        - clear_session_cookies
    response:
      status_code: 200
      json:
        authenticated: false  # No session cookie
        has_remember_me: true # Persistent cookie still present

  # Stage 4: Verify only persistent cookie remains
  - name: Check remaining cookies
    request:
      url: http://localhost:8080/cookies/list
      method: GET
    response:
      status_code: 200
      json:
        cookies:
          - remember_me  # Only persistent cookie remains
        count: 1
